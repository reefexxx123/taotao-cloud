server:
  port: 9700
  http2:
    enabled: true
  undertow:
    buffer-size: 20480
    direct-buffers: true
    io-threads: 12
    worker-threads: 20

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: taotao-cloud-uc-center
  cloud:
    nacos:
      discovery:
        server-addr: ${TAOTAO-CLOUD-NACOS-HOST:127.0.0.1}:${TAOTAO-CLOUD-NACOS-PORT:8848}
        metadata:
          version: 5
  #      config:
  #        server-addr: 127.0.0.1:8848
  #        namespace: 2c421c7d-7c62-422e-a4f3-996a2d301c67
  #        file-extension: yml
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://${TAOTAO-CLOUD-MYSQL-HOST:127.0.0.1}:${TAOTAO-CLOUD-NACOS-PORT:3306}/taotao-cloud-uc-center?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: ${TAOTAO-CLOUD-MYSQL-USERNAME:root}
    password: ${TAOTAO-CLOUD-MYSQL-PASSWORD:123456}
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      connection-test-query: SELECT 1
      max-lifetime: 120000
      maximum-pool-size: 15
      minimum-idle: 3
      connection-timeout: 30000
      idle-timeout: 30000
      auto-commit: true
      pool-name: DatebookHikariCP
  redis:
    host: 127.0.0.1
    port: 6379
    password: 123456
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
  elasticsearch:
    rest:
      uris: ${TAOTAO-CLOUD-ELASTICSEARCH-HOST:127.0.0.1}:${TAOTAO-CLOUD-ELASTICSEARCH-PASSWORD:9200}
      username: elastic
      password: elastic

mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.taotao.cloud.uc.api.entity
  global-config:
    db-config:
      id-type: auto
      table-underline: true
      field-strategy: NOT_NULL
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

security:
  oauth2:
    client:
      client-id: server
      client-secret: server
      scope: all
      grant-type: client_credentials
      access-token-uri: http://127.0.0.1:9800/oauth/token
      user-authorization-uri: http://127.0.0.1:9800/oauth/authorize
    resource:
      loadBalanced: false
      token-info-uri: http://127.0.0.1:9800/oauth/check_token
#      prefer-token-info: false

taotao:
  cloud:
    # 认证模块
    oauth2:
      security:
        enabled: true
        ignore:
          # 忽略认证的地址
          http-urls: >
            /user/info/**,
            /api-docs,
            /qq,
            /gitee,
            /github,
            /user/login,
            /repeat/check,
            /socket/**,
            /log
    # swagger模块
    swagger:
      enabled: true
      title: 用户中心
      description: 用户中心接口文档
      version: 1.0
      license: Apache
      license-url: https://opensource.org/licenses/Apache-2.0Url
      contact:
        name: dengtao
        url: http://dtbox.top/
        email: 981376577@qq.com
      base-package: com.taotao.cloud.uc.biz.controller
      host: ${spring.cloud.client.ip-address}:${server.port}
    # ribbon模块
    ribbon:
      isolation:
        enabled: true
      rest-template:
        max-total: 200
        max-per-route: 50
        read-timeout: 35000
        connect-timeout: 10000
    # redis缓存模块
    redis:
      cache-manager:
        configs:
          - key: menu
            second: 300
          - key: user
            second: 1800
    # 消息模块
    message:
      sms:
        enabled: true
        aliyun:
          enabled: true
          configs:
            - type: login
              code: lasdfjasjd234234
            - type: register
              code: sldj234osfu
    # 日志模块
    log:
      enabled: true
      trace:
        enabled: true
    # elk模块
    elk:
      enabled: true
      app-name: ${spring.application.name}
      spring-app-name: ${spring.application.name}
      destinations: >
        127.0.0.1:4560
      health:
        log:
          statistic:
            enabled: true
    # elasticsearch模块
    elasticsearch:
      indices:
        show:
      rest-pool:
        connect-time-out: 1000
        socket-time-out: 30000
        connection-request-time-out: 500
        max-connect-num: 30
        max-connect-per-route: 10
      web:
        controller:
          aspect:
            enabled: true
    #持久层配置
    data:
      mybatis-plus:
        auto-fill:
          enabled: true
      tenant:
        enabled: false
        ignore-tables:
          - sys_user
        ignore-sqls:
          - com.central.user.mapper.SysRoleMapper.findAll
feign:
  sentinel:
    enabled: false
  hystrix:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    enabled: false
    max-connections: 1000
    max-connections-per-route: 100
  client:
    config:
      feignName:
        connectTimeout: 30000
        readTimeout: 30000
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true

hystrix:
  command:
    default:
      circuitBreaker:
        # 当在配置时间窗口内达到此数量的失败后，进行短路。默认20个
        requestVolumeThreshold: 10
        # 触发短路的时间值，当该值设为5000时，则当触发 circuit break 后的5000毫秒内都会拒绝request
        # 也就是5000毫秒后才会关闭circuit。默认5000
        sleepWindowInMilliseconds: 15000
        # 强制打开熔断器，如果打开这个开关，那么拒绝所有request，默认false
        forceOpen: false
        # 强制关闭熔断器 如果这个开关打开，circuit将一直关闭且忽略，默认false
        forceClosed: false
      fallback:
        enabled: true
      execution:
        timeout:
          enabled: true
        isolation:
          strategy: THREAD
        thread:
          # 断路器超时时间，默认1000ms
          timeoutInMilliseconds: 8000


ribbon:
  okhttp:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
